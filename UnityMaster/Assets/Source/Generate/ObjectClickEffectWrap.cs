//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class ObjectClickEffectWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(ObjectClickEffect), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("OnClick", OnClick);
		L.RegFunction("doShotAnimation", doShotAnimation);
		L.RegFunction("DoReset", DoReset);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("is3DClick", get_is3DClick, set_is3DClick);
		L.RegVar("courseName", get_courseName, set_courseName);
		L.RegVar("soundNum", get_soundNum, set_soundNum);
		L.RegVar("clickInterval", get_clickInterval, set_clickInterval);
		L.RegVar("isActive", get_isActive, set_isActive);
		L.RegVar("Actor", get_Actor, set_Actor);
		L.RegVar("idle", get_idle, set_idle);
		L.RegVar("action", get_action, set_action);
		L.RegVar("effect", get_effect, set_effect);
		L.RegVar("scaleEnd", get_scaleEnd, set_scaleEnd);
		L.RegVar("during", get_during, set_during);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnClick(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ObjectClickEffect obj = (ObjectClickEffect)ToLua.CheckObject<ObjectClickEffect>(L, 1);
			obj.OnClick();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int doShotAnimation(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3)
			{
				ObjectClickEffect obj = (ObjectClickEffect)ToLua.CheckObject<ObjectClickEffect>(L, 1);
				Spine.AnimationState arg0 = (Spine.AnimationState)ToLua.CheckObject<Spine.AnimationState>(L, 2);
				float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
				obj.doShotAnimation(arg0, arg1);
				return 0;
			}
			else if (count == 4)
			{
				ObjectClickEffect obj = (ObjectClickEffect)ToLua.CheckObject<ObjectClickEffect>(L, 1);
				Spine.AnimationState arg0 = (Spine.AnimationState)ToLua.CheckObject<Spine.AnimationState>(L, 2);
				float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
				string arg2 = ToLua.CheckString(L, 4);
				obj.doShotAnimation(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 5)
			{
				ObjectClickEffect obj = (ObjectClickEffect)ToLua.CheckObject<ObjectClickEffect>(L, 1);
				Spine.AnimationState arg0 = (Spine.AnimationState)ToLua.CheckObject<Spine.AnimationState>(L, 2);
				float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
				string arg2 = ToLua.CheckString(L, 4);
				string arg3 = ToLua.CheckString(L, 5);
				obj.doShotAnimation(arg0, arg1, arg2, arg3);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: ObjectClickEffect.doShotAnimation");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DoReset(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ObjectClickEffect obj = (ObjectClickEffect)ToLua.CheckObject<ObjectClickEffect>(L, 1);
			obj.DoReset();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_is3DClick(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ObjectClickEffect obj = (ObjectClickEffect)o;
			bool ret = obj.is3DClick;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index is3DClick on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_courseName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ObjectClickEffect obj = (ObjectClickEffect)o;
			string ret = obj.courseName;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index courseName on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_soundNum(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ObjectClickEffect obj = (ObjectClickEffect)o;
			int ret = obj.soundNum;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index soundNum on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_clickInterval(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ObjectClickEffect obj = (ObjectClickEffect)o;
			float ret = obj.clickInterval;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index clickInterval on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_isActive(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ObjectClickEffect obj = (ObjectClickEffect)o;
			bool ret = obj.isActive;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index isActive on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Actor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ObjectClickEffect obj = (ObjectClickEffect)o;
			UnityEngine.GameObject ret = obj.Actor;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Actor on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_idle(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ObjectClickEffect obj = (ObjectClickEffect)o;
			string ret = obj.idle;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index idle on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_action(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ObjectClickEffect obj = (ObjectClickEffect)o;
			string ret = obj.action;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index action on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_effect(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ObjectClickEffect obj = (ObjectClickEffect)o;
			UnityEngine.GameObject ret = obj.effect;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index effect on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_scaleEnd(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ObjectClickEffect obj = (ObjectClickEffect)o;
			float ret = obj.scaleEnd;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index scaleEnd on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_during(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ObjectClickEffect obj = (ObjectClickEffect)o;
			float ret = obj.during;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index during on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_is3DClick(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ObjectClickEffect obj = (ObjectClickEffect)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.is3DClick = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index is3DClick on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_courseName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ObjectClickEffect obj = (ObjectClickEffect)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.courseName = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index courseName on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_soundNum(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ObjectClickEffect obj = (ObjectClickEffect)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.soundNum = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index soundNum on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_clickInterval(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ObjectClickEffect obj = (ObjectClickEffect)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.clickInterval = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index clickInterval on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_isActive(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ObjectClickEffect obj = (ObjectClickEffect)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.isActive = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index isActive on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Actor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ObjectClickEffect obj = (ObjectClickEffect)o;
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			obj.Actor = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Actor on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_idle(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ObjectClickEffect obj = (ObjectClickEffect)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.idle = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index idle on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_action(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ObjectClickEffect obj = (ObjectClickEffect)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.action = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index action on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_effect(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ObjectClickEffect obj = (ObjectClickEffect)o;
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			obj.effect = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index effect on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_scaleEnd(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ObjectClickEffect obj = (ObjectClickEffect)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.scaleEnd = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index scaleEnd on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_during(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ObjectClickEffect obj = (ObjectClickEffect)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.during = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index during on a nil value");
		}
	}
}

