//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class LuaManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(LuaManager), typeof(ILFramework.Manager<LuaManager>));
		L.RegFunction("AddLuaCourseBundle", AddLuaCourseBundle);
		L.RegFunction("RemoveLuaZipMap", RemoveLuaZipMap);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("GlobalLua", get_GlobalLua, set_GlobalLua);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddLuaCourseBundle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaManager obj = (LuaManager)ToLua.CheckObject<LuaManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			bool o = obj.AddLuaCourseBundle(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveLuaZipMap(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaManager obj = (LuaManager)ToLua.CheckObject<LuaManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.RemoveLuaZipMap(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_GlobalLua(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LuaManager obj = (LuaManager)o;
			LuaInterface.LuaState ret = obj.GlobalLua;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index GlobalLua on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_GlobalLua(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LuaManager obj = (LuaManager)o;
			LuaInterface.LuaState arg0 = (LuaInterface.LuaState)ToLua.CheckObject<LuaInterface.LuaState>(L, 2);
			obj.GlobalLua = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index GlobalLua on a nil value");
		}
	}
}

