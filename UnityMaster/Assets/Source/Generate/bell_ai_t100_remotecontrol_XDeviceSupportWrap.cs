//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class bell_ai_t100_remotecontrol_XDeviceSupportWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(bell.ai.t100.remotecontrol.XDeviceSupport), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("touch_point", get_touch_point, set_touch_point);
		L.RegVar("changeEvent", get_changeEvent, set_changeEvent);
		L.RegFunction("XPointChangeEvent", bell_ai_t100_remotecontrol_XDeviceSupport_XPointChangeEvent);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_touch_point(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			bell.ai.t100.remotecontrol.XDeviceSupport obj = (bell.ai.t100.remotecontrol.XDeviceSupport)o;
			UnityEngine.GameObject ret = obj.touch_point;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index touch_point on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_changeEvent(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			bell.ai.t100.remotecontrol.XDeviceSupport obj = (bell.ai.t100.remotecontrol.XDeviceSupport)o;
			bell.ai.t100.remotecontrol.XDeviceSupport.XPointChangeEvent ret = obj.changeEvent;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index changeEvent on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_touch_point(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			bell.ai.t100.remotecontrol.XDeviceSupport obj = (bell.ai.t100.remotecontrol.XDeviceSupport)o;
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			obj.touch_point = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index touch_point on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_changeEvent(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			bell.ai.t100.remotecontrol.XDeviceSupport obj = (bell.ai.t100.remotecontrol.XDeviceSupport)o;
			bell.ai.t100.remotecontrol.XDeviceSupport.XPointChangeEvent arg0 = (bell.ai.t100.remotecontrol.XDeviceSupport.XPointChangeEvent)ToLua.CheckDelegate<bell.ai.t100.remotecontrol.XDeviceSupport.XPointChangeEvent>(L, 2);
			obj.changeEvent = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index changeEvent on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int bell_ai_t100_remotecontrol_XDeviceSupport_XPointChangeEvent(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<bell.ai.t100.remotecontrol.XDeviceSupport.XPointChangeEvent>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<bell.ai.t100.remotecontrol.XDeviceSupport.XPointChangeEvent>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

