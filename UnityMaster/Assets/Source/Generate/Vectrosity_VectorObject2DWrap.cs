//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Vectrosity_VectorObject2DWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Vectrosity.VectorObject2D), typeof(UnityEngine.UI.RawImage));
		L.RegFunction("SetVectorLine", SetVectorLine);
		L.RegFunction("Destroy", Destroy);
		L.RegFunction("DestroyNow", DestroyNow);
		L.RegFunction("Enable", Enable);
		L.RegFunction("SetTexture", SetTexture);
		L.RegFunction("SetMaterial", SetMaterial);
		L.RegFunction("SetName", SetName);
		L.RegFunction("UpdateVerts", UpdateVerts);
		L.RegFunction("UpdateUVs", UpdateUVs);
		L.RegFunction("UpdateColors", UpdateColors);
		L.RegFunction("UpdateNormals", UpdateNormals);
		L.RegFunction("UpdateTangents", UpdateTangents);
		L.RegFunction("UpdateTris", UpdateTris);
		L.RegFunction("UpdateMeshAttributes", UpdateMeshAttributes);
		L.RegFunction("ClearMesh", ClearMesh);
		L.RegFunction("VertexCount", VertexCount);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("vectorLine", get_vectorLine, set_vectorLine);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetVectorLine(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			Vectrosity.VectorObject2D obj = (Vectrosity.VectorObject2D)ToLua.CheckObject<Vectrosity.VectorObject2D>(L, 1);
			Vectrosity.VectorLine arg0 = (Vectrosity.VectorLine)ToLua.CheckObject<Vectrosity.VectorLine>(L, 2);
			UnityEngine.Texture arg1 = (UnityEngine.Texture)ToLua.CheckObject<UnityEngine.Texture>(L, 3);
			UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 4);
			bool arg3 = LuaDLL.luaL_checkboolean(L, 5);
			obj.SetVectorLine(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Destroy(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Vectrosity.VectorObject2D obj = (Vectrosity.VectorObject2D)ToLua.CheckObject<Vectrosity.VectorObject2D>(L, 1);
			obj.Destroy();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DestroyNow(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Vectrosity.VectorObject2D obj = (Vectrosity.VectorObject2D)ToLua.CheckObject<Vectrosity.VectorObject2D>(L, 1);
			obj.DestroyNow();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Enable(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Vectrosity.VectorObject2D obj = (Vectrosity.VectorObject2D)ToLua.CheckObject<Vectrosity.VectorObject2D>(L, 1);
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.Enable(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetTexture(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Vectrosity.VectorObject2D obj = (Vectrosity.VectorObject2D)ToLua.CheckObject<Vectrosity.VectorObject2D>(L, 1);
			UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.CheckObject<UnityEngine.Texture>(L, 2);
			obj.SetTexture(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetMaterial(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Vectrosity.VectorObject2D obj = (Vectrosity.VectorObject2D)ToLua.CheckObject<Vectrosity.VectorObject2D>(L, 1);
			UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 2);
			obj.SetMaterial(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetName(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Vectrosity.VectorObject2D obj = (Vectrosity.VectorObject2D)ToLua.CheckObject<Vectrosity.VectorObject2D>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.SetName(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateVerts(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Vectrosity.VectorObject2D obj = (Vectrosity.VectorObject2D)ToLua.CheckObject<Vectrosity.VectorObject2D>(L, 1);
			obj.UpdateVerts();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateUVs(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Vectrosity.VectorObject2D obj = (Vectrosity.VectorObject2D)ToLua.CheckObject<Vectrosity.VectorObject2D>(L, 1);
			obj.UpdateUVs();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateColors(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Vectrosity.VectorObject2D obj = (Vectrosity.VectorObject2D)ToLua.CheckObject<Vectrosity.VectorObject2D>(L, 1);
			obj.UpdateColors();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateNormals(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Vectrosity.VectorObject2D obj = (Vectrosity.VectorObject2D)ToLua.CheckObject<Vectrosity.VectorObject2D>(L, 1);
			obj.UpdateNormals();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateTangents(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Vectrosity.VectorObject2D obj = (Vectrosity.VectorObject2D)ToLua.CheckObject<Vectrosity.VectorObject2D>(L, 1);
			obj.UpdateTangents();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateTris(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Vectrosity.VectorObject2D obj = (Vectrosity.VectorObject2D)ToLua.CheckObject<Vectrosity.VectorObject2D>(L, 1);
			obj.UpdateTris();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateMeshAttributes(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Vectrosity.VectorObject2D obj = (Vectrosity.VectorObject2D)ToLua.CheckObject<Vectrosity.VectorObject2D>(L, 1);
			obj.UpdateMeshAttributes();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClearMesh(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Vectrosity.VectorObject2D obj = (Vectrosity.VectorObject2D)ToLua.CheckObject<Vectrosity.VectorObject2D>(L, 1);
			obj.ClearMesh();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int VertexCount(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Vectrosity.VectorObject2D obj = (Vectrosity.VectorObject2D)ToLua.CheckObject<Vectrosity.VectorObject2D>(L, 1);
			int o = obj.VertexCount();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_vectorLine(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Vectrosity.VectorObject2D obj = (Vectrosity.VectorObject2D)o;
			Vectrosity.VectorLine ret = obj.vectorLine;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index vectorLine on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_vectorLine(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Vectrosity.VectorObject2D obj = (Vectrosity.VectorObject2D)o;
			Vectrosity.VectorLine arg0 = (Vectrosity.VectorLine)ToLua.CheckObject<Vectrosity.VectorLine>(L, 2);
			obj.vectorLine = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index vectorLine on a nil value");
		}
	}
}

