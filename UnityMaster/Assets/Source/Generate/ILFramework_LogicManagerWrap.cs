//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class ILFramework_LogicManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(ILFramework.LogicManager), typeof(ILFramework.Manager<ILFramework.LogicManager>));
		L.RegFunction("SetReplayEvent", SetReplayEvent);
		L.RegFunction("ShowReplayBtn", ShowReplayBtn);
		L.RegFunction("GetVideoPath", GetVideoPath);
		L.RegFunction("InstiateVideoPlayer", InstiateVideoPlayer);
		L.RegFunction("PlayVideo", PlayVideo);
		L.RegFunction("StopVideo", StopVideo);
		L.RegFunction("ShowVideo", ShowVideo);
		L.RegFunction("SetPlay", SetPlay);
		L.RegFunction("Play", Play);
		L.RegFunction("Stop", Stop);
		L.RegFunction("Show", Show);
		L.RegFunction("setPlay", setPlay);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("replayBtn", get_replayBtn, set_replayBtn);
		L.RegVar("shiled", get_shiled, set_shiled);
		L.RegVar("videoPlayer", get_videoPlayer, set_videoPlayer);
		L.RegVar("videoImage", get_videoImage, set_videoImage);
		L.RegVar("isPlayEnd", get_isPlayEnd, set_isPlayEnd);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetReplayEvent(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes<System.Action>(L, 2))
			{
				ILFramework.LogicManager obj = (ILFramework.LogicManager)ToLua.CheckObject<ILFramework.LogicManager>(L, 1);
				System.Action arg0 = (System.Action)ToLua.ToObject(L, 2);
				obj.SetReplayEvent(arg0);
				return 0;
			}
			else if (count == 2 && TypeChecker.CheckTypes<LuaInterface.LuaFunction>(L, 2))
			{
				ILFramework.LogicManager obj = (ILFramework.LogicManager)ToLua.CheckObject<ILFramework.LogicManager>(L, 1);
				LuaFunction arg0 = ToLua.ToLuaFunction(L, 2);
				obj.SetReplayEvent(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: ILFramework.LogicManager.SetReplayEvent");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ShowReplayBtn(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ILFramework.LogicManager obj = (ILFramework.LogicManager)ToLua.CheckObject<ILFramework.LogicManager>(L, 1);
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.ShowReplayBtn(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetVideoPath(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ILFramework.LogicManager obj = (ILFramework.LogicManager)ToLua.CheckObject<ILFramework.LogicManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string o = obj.GetVideoPath(arg0);
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InstiateVideoPlayer(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				ILFramework.LogicManager obj = (ILFramework.LogicManager)ToLua.CheckObject<ILFramework.LogicManager>(L, 1);
				obj.InstiateVideoPlayer();
				return 0;
			}
			else if (count == 2)
			{
				ILFramework.LogicManager obj = (ILFramework.LogicManager)ToLua.CheckObject<ILFramework.LogicManager>(L, 1);
				bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
				obj.InstiateVideoPlayer(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: ILFramework.LogicManager.InstiateVideoPlayer");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PlayVideo(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				ILFramework.LogicManager obj = (ILFramework.LogicManager)ToLua.CheckObject<ILFramework.LogicManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				obj.PlayVideo(arg0);
				return 0;
			}
			else if (count == 3)
			{
				ILFramework.LogicManager obj = (ILFramework.LogicManager)ToLua.CheckObject<ILFramework.LogicManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
				obj.PlayVideo(arg0, arg1);
				return 0;
			}
			else if (count == 4)
			{
				ILFramework.LogicManager obj = (ILFramework.LogicManager)ToLua.CheckObject<ILFramework.LogicManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
				bool arg2 = LuaDLL.luaL_checkboolean(L, 4);
				obj.PlayVideo(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 5)
			{
				ILFramework.LogicManager obj = (ILFramework.LogicManager)ToLua.CheckObject<ILFramework.LogicManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
				bool arg2 = LuaDLL.luaL_checkboolean(L, 4);
				System.Action arg3 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 5);
				obj.PlayVideo(arg0, arg1, arg2, arg3);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: ILFramework.LogicManager.PlayVideo");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StopVideo(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ILFramework.LogicManager obj = (ILFramework.LogicManager)ToLua.CheckObject<ILFramework.LogicManager>(L, 1);
			obj.StopVideo();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ShowVideo(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ILFramework.LogicManager obj = (ILFramework.LogicManager)ToLua.CheckObject<ILFramework.LogicManager>(L, 1);
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.ShowVideo(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetPlay(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ILFramework.LogicManager obj = (ILFramework.LogicManager)ToLua.CheckObject<ILFramework.LogicManager>(L, 1);
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.SetPlay(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Play(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			ILFramework.LogicManager obj = (ILFramework.LogicManager)ToLua.CheckObject<ILFramework.LogicManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			obj.Play(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Stop(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ILFramework.LogicManager obj = (ILFramework.LogicManager)ToLua.CheckObject<ILFramework.LogicManager>(L, 1);
			obj.Stop();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Show(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ILFramework.LogicManager obj = (ILFramework.LogicManager)ToLua.CheckObject<ILFramework.LogicManager>(L, 1);
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.Show(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setPlay(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ILFramework.LogicManager obj = (ILFramework.LogicManager)ToLua.CheckObject<ILFramework.LogicManager>(L, 1);
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.setPlay(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_replayBtn(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ILFramework.LogicManager obj = (ILFramework.LogicManager)o;
			UnityEngine.GameObject ret = obj.replayBtn;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index replayBtn on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_shiled(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ILFramework.LogicManager obj = (ILFramework.LogicManager)o;
			UnityEngine.GameObject ret = obj.shiled;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index shiled on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_videoPlayer(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ILFramework.LogicManager obj = (ILFramework.LogicManager)o;
			UnityEngine.Video.VideoPlayer ret = obj.videoPlayer;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index videoPlayer on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_videoImage(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ILFramework.LogicManager obj = (ILFramework.LogicManager)o;
			UnityEngine.UI.RawImage ret = obj.videoImage;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index videoImage on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_isPlayEnd(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ILFramework.LogicManager obj = (ILFramework.LogicManager)o;
			bool ret = obj.isPlayEnd;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index isPlayEnd on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_replayBtn(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ILFramework.LogicManager obj = (ILFramework.LogicManager)o;
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			obj.replayBtn = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index replayBtn on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_shiled(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ILFramework.LogicManager obj = (ILFramework.LogicManager)o;
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			obj.shiled = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index shiled on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_videoPlayer(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ILFramework.LogicManager obj = (ILFramework.LogicManager)o;
			UnityEngine.Video.VideoPlayer arg0 = (UnityEngine.Video.VideoPlayer)ToLua.CheckObject(L, 2, typeof(UnityEngine.Video.VideoPlayer));
			obj.videoPlayer = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index videoPlayer on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_videoImage(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ILFramework.LogicManager obj = (ILFramework.LogicManager)o;
			UnityEngine.UI.RawImage arg0 = (UnityEngine.UI.RawImage)ToLua.CheckObject<UnityEngine.UI.RawImage>(L, 2);
			obj.videoImage = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index videoImage on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_isPlayEnd(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ILFramework.LogicManager obj = (ILFramework.LogicManager)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.isPlayEnd = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index isPlayEnd on a nil value");
		}
	}
}

