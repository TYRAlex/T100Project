//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class GetXDeviceStateWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(GetXDeviceState), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("Init", Init);
		L.RegFunction("GetRotation", GetRotation);
		L.RegFunction("GetPosition", GetPosition);
		L.RegFunction("Recenter", Recenter);
		L.RegFunction("GetDeviceState", GetDeviceState);
		L.RegFunction("ReleaseCallback", ReleaseCallback);
		L.RegFunction("Exit", Exit);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("target", get_target, set_target);
		L.RegVar("source", get_source, set_source);
		L.RegVar("sourceName", get_sourceName, set_sourceName);
		L.RegVar("trackPosition", get_trackPosition, set_trackPosition);
		L.RegVar("trackRotation", get_trackRotation, set_trackRotation);
		L.RegVar("checkParent", get_checkParent, set_checkParent);
		L.RegVar("canRecenter", get_canRecenter, set_canRecenter);
		L.RegVar("clickCallback", get_clickCallback, set_clickCallback);
		L.RegVar("clickDownCallback", get_clickDownCallback, set_clickDownCallback);
		L.RegVar("clickUpCallback", get_clickUpCallback, set_clickUpCallback);
		L.RegVar("getRotateCallBack", get_getRotateCallBack, set_getRotateCallBack);
		L.RegVar("getSensorCallBack", get_getSensorCallBack, set_getSensorCallBack);
		L.RegVar("uclickCallback", get_uclickCallback, set_uclickCallback);
		L.RegVar("uclickDownCallback", get_uclickDownCallback, set_uclickDownCallback);
		L.RegVar("uclickUpCallback", get_uclickUpCallback, set_uclickUpCallback);
		L.RegVar("ugetRotateCallBack", get_ugetRotateCallBack, set_ugetRotateCallBack);
		L.RegVar("ugetSensorCallBack", get_ugetSensorCallBack, set_ugetSensorCallBack);
		L.RegVar("controllerInput", get_controllerInput, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GetXDeviceState obj = (GetXDeviceState)ToLua.CheckObject<GetXDeviceState>(L, 1);
			obj.Init();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetRotation(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GetXDeviceState obj = (GetXDeviceState)ToLua.CheckObject<GetXDeviceState>(L, 1);
			UnityEngine.Vector3 o = obj.GetRotation();
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetPosition(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GetXDeviceState obj = (GetXDeviceState)ToLua.CheckObject<GetXDeviceState>(L, 1);
			UnityEngine.Vector3 o = obj.GetPosition();
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Recenter(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GetXDeviceState obj = (GetXDeviceState)ToLua.CheckObject<GetXDeviceState>(L, 1);
			obj.Recenter();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetDeviceState(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GetXDeviceState obj = (GetXDeviceState)ToLua.CheckObject<GetXDeviceState>(L, 1);
			Ximmerse.InputSystem.DeviceConnectionState o = obj.GetDeviceState();
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ReleaseCallback(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GetXDeviceState obj = (GetXDeviceState)ToLua.CheckObject<GetXDeviceState>(L, 1);
			obj.ReleaseCallback();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Exit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GetXDeviceState obj = (GetXDeviceState)ToLua.CheckObject<GetXDeviceState>(L, 1);
			obj.Exit();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_target(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GetXDeviceState obj = (GetXDeviceState)o;
			UnityEngine.Transform ret = obj.target;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index target on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_source(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GetXDeviceState obj = (GetXDeviceState)o;
			Ximmerse.InputSystem.ControllerType ret = obj.source;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index source on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_sourceName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GetXDeviceState obj = (GetXDeviceState)o;
			string ret = obj.sourceName;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index sourceName on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_trackPosition(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GetXDeviceState obj = (GetXDeviceState)o;
			bool ret = obj.trackPosition;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index trackPosition on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_trackRotation(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GetXDeviceState obj = (GetXDeviceState)o;
			bool ret = obj.trackRotation;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index trackRotation on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_checkParent(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GetXDeviceState obj = (GetXDeviceState)o;
			bool ret = obj.checkParent;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index checkParent on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_canRecenter(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GetXDeviceState obj = (GetXDeviceState)o;
			bool ret = obj.canRecenter;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index canRecenter on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_clickCallback(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GetXDeviceState obj = (GetXDeviceState)o;
			LuaInterface.LuaFunction ret = obj.clickCallback;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index clickCallback on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_clickDownCallback(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GetXDeviceState obj = (GetXDeviceState)o;
			LuaInterface.LuaFunction ret = obj.clickDownCallback;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index clickDownCallback on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_clickUpCallback(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GetXDeviceState obj = (GetXDeviceState)o;
			LuaInterface.LuaFunction ret = obj.clickUpCallback;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index clickUpCallback on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_getRotateCallBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GetXDeviceState obj = (GetXDeviceState)o;
			LuaInterface.LuaFunction ret = obj.getRotateCallBack;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index getRotateCallBack on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_getSensorCallBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GetXDeviceState obj = (GetXDeviceState)o;
			LuaInterface.LuaFunction ret = obj.getSensorCallBack;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index getSensorCallBack on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_uclickCallback(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GetXDeviceState obj = (GetXDeviceState)o;
			UnityEngine.Events.UnityAction<Ximmerse.InputSystem.ControllerButton> ret = obj.uclickCallback;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index uclickCallback on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_uclickDownCallback(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GetXDeviceState obj = (GetXDeviceState)o;
			UnityEngine.Events.UnityAction<Ximmerse.InputSystem.ControllerButton> ret = obj.uclickDownCallback;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index uclickDownCallback on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_uclickUpCallback(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GetXDeviceState obj = (GetXDeviceState)o;
			UnityEngine.Events.UnityAction<Ximmerse.InputSystem.ControllerButton> ret = obj.uclickUpCallback;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index uclickUpCallback on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ugetRotateCallBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GetXDeviceState obj = (GetXDeviceState)o;
			UnityEngine.Events.UnityAction<UnityEngine.Vector3> ret = obj.ugetRotateCallBack;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ugetRotateCallBack on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ugetSensorCallBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GetXDeviceState obj = (GetXDeviceState)o;
			UnityEngine.Events.UnityAction<UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3> ret = obj.ugetSensorCallBack;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ugetSensorCallBack on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_controllerInput(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GetXDeviceState obj = (GetXDeviceState)o;
			Ximmerse.InputSystem.ControllerInput ret = obj.controllerInput;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index controllerInput on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_target(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GetXDeviceState obj = (GetXDeviceState)o;
			UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 2);
			obj.target = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index target on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_source(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GetXDeviceState obj = (GetXDeviceState)o;
			Ximmerse.InputSystem.ControllerType arg0 = (Ximmerse.InputSystem.ControllerType)ToLua.CheckObject(L, 2, typeof(Ximmerse.InputSystem.ControllerType));
			obj.source = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index source on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_sourceName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GetXDeviceState obj = (GetXDeviceState)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.sourceName = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index sourceName on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_trackPosition(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GetXDeviceState obj = (GetXDeviceState)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.trackPosition = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index trackPosition on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_trackRotation(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GetXDeviceState obj = (GetXDeviceState)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.trackRotation = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index trackRotation on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_checkParent(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GetXDeviceState obj = (GetXDeviceState)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.checkParent = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index checkParent on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_canRecenter(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GetXDeviceState obj = (GetXDeviceState)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.canRecenter = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index canRecenter on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_clickCallback(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GetXDeviceState obj = (GetXDeviceState)o;
			LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
			obj.clickCallback = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index clickCallback on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_clickDownCallback(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GetXDeviceState obj = (GetXDeviceState)o;
			LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
			obj.clickDownCallback = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index clickDownCallback on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_clickUpCallback(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GetXDeviceState obj = (GetXDeviceState)o;
			LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
			obj.clickUpCallback = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index clickUpCallback on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_getRotateCallBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GetXDeviceState obj = (GetXDeviceState)o;
			LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
			obj.getRotateCallBack = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index getRotateCallBack on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_getSensorCallBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GetXDeviceState obj = (GetXDeviceState)o;
			LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
			obj.getSensorCallBack = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index getSensorCallBack on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_uclickCallback(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GetXDeviceState obj = (GetXDeviceState)o;
			UnityEngine.Events.UnityAction<Ximmerse.InputSystem.ControllerButton> arg0 = (UnityEngine.Events.UnityAction<Ximmerse.InputSystem.ControllerButton>)ToLua.CheckDelegate<UnityEngine.Events.UnityAction<Ximmerse.InputSystem.ControllerButton>>(L, 2);
			obj.uclickCallback = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index uclickCallback on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_uclickDownCallback(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GetXDeviceState obj = (GetXDeviceState)o;
			UnityEngine.Events.UnityAction<Ximmerse.InputSystem.ControllerButton> arg0 = (UnityEngine.Events.UnityAction<Ximmerse.InputSystem.ControllerButton>)ToLua.CheckDelegate<UnityEngine.Events.UnityAction<Ximmerse.InputSystem.ControllerButton>>(L, 2);
			obj.uclickDownCallback = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index uclickDownCallback on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_uclickUpCallback(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GetXDeviceState obj = (GetXDeviceState)o;
			UnityEngine.Events.UnityAction<Ximmerse.InputSystem.ControllerButton> arg0 = (UnityEngine.Events.UnityAction<Ximmerse.InputSystem.ControllerButton>)ToLua.CheckDelegate<UnityEngine.Events.UnityAction<Ximmerse.InputSystem.ControllerButton>>(L, 2);
			obj.uclickUpCallback = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index uclickUpCallback on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ugetRotateCallBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GetXDeviceState obj = (GetXDeviceState)o;
			UnityEngine.Events.UnityAction<UnityEngine.Vector3> arg0 = (UnityEngine.Events.UnityAction<UnityEngine.Vector3>)ToLua.CheckDelegate<UnityEngine.Events.UnityAction<UnityEngine.Vector3>>(L, 2);
			obj.ugetRotateCallBack = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ugetRotateCallBack on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ugetSensorCallBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GetXDeviceState obj = (GetXDeviceState)o;
			UnityEngine.Events.UnityAction<UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3> arg0 = (UnityEngine.Events.UnityAction<UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3>)ToLua.CheckDelegate<UnityEngine.Events.UnityAction<UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3>>(L, 2);
			obj.ugetSensorCallBack = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ugetSensorCallBack on a nil value");
		}
	}
}

